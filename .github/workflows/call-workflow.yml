
name: Terraform CICD Workflow

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    branches:
      - main
  pull_request_review:
    types: [submitted]

jobs:
  plan_dev:
    uses: ./.github/workflows/plan-workflow.yml
    with:
      gh_environment: dev
      enable_TFSEC: true
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_dev:
    needs: [plan_dev]
    uses: ./.github/workflows/apply-workflow.yml
    with:
      path: tfplan
      gh_environment: dev
      tf_version: 1.3.0
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  plan_prod:
    uses: ./.github/workflows/plan-workflow.yml
    with:
      gh_environment: prod
      enable_TFSEC: false
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy_prod:
    if: github.event.pull_request.merged == true && github.event.label.name == 'prod'
    needs: [deploy_dev, plan_prod]
    uses: ./.github/workflows/apply-workflow.yml
    with:
      path: tfplan
      gh_environment: prod
      tf_version: 1.3.0
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  destroy_dev:
    if: github.event.pull_request.merged == true
    needs: [deploy_dev]
    uses: ./.github/workflows/cleanup.yml
    with:
      gh_environment: dev
      enable_destroy: true

  destroy_prod:
    if: github.event.pull_request.merged == true && github.event.label.name == 'prod'
    needs: [deploy_prod]
    uses: ./.github/workflows/cleanup.yml
    with:
      gh_environment: dev
      enable_destroy: true
