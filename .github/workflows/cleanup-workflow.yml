name: Cleanup Manually

on:
  workflow_dispatch:
    inputs:
      gh_environment:
        description: 'Specifies the GitHub deployment environment.'
        required: false
        type: string
        default: dev
      enable_destroy:
        description: '(Optional) Enables TFSEC IaC scans and code quality checks on Terraform configurations'
        required: false
        type: boolean
        default: false
      bucket_name:
        description: 'cleanup bucketname'
        required: true
        type: string
      app_name:
        description: 'cleanup target component name'
        required: true
        type: string

permissions: write-all

jobs:
  destroy_dev:
    runs-on: ubuntu-latest
    name: Destroy terraform workspace
    env:
      TF_WORKSPACE: ${{ inputs.gh_environment }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true
          terraform_version: 1.3.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ap-northeast-2
          #role-to-assume: arn:aws:iam::783857413761:role/GithubOIDCRole
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Init - ${{ inputs.gh_environment }}
        id: init
        #run: terraform init -input=false -backend-config="key=${{matrix.path}}"
        run: |
          SAVED_TF_WORKSPACE=$TF_WORKSPACE
          unset TF_WORKSPACE
          terraform init -input=false -backend-config="key=${{inputs.gh_environment}}}" -backend-config="backends/${{inputs.gh_environment}}.conf"
          TF_WORKSPACE=$SAVED_TF_WORKSPACE
          terraform workspace select "${TF_WORKSPACE}" || terraform workspace new "${TF_WORKSPACE}"

      - name: Terraform Plan Destroy
        run: terraform plan -destroy -var-file=environments/${{inputs.gh_environment}}.auto.tfvars -out=destroy.tfplan
        continue-on-error: true
      
      - name: Post Plan
        uses: robburger/terraform-pr-commenter@v1
        env:
          EXPAND_SUMMARY_DETAILS: true # Override global environment variable; expand details just for this step
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}

      - name: Terraform apply Destroy
        if: inputs.enable_destroy == true
        run: terraform apply destroy.tfplan

      - name: Delete plan file
        if: steps.destroy.outcome == 'success'
        run: aws s3 rm s3://${{inputs.bucket_name}}/env:/${{inputs.gh_environment}}/${{inputs.app_name}}/terraform.tfstate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}